(put 'xosus 'rcsid 
 "$Id: xosus.el,v 1.5 2000-10-03 16:50:29 cvs Exp $")
;; not really required, but..
(defvar xosust-file (expand-file-name (getenv "XOSUST")))

(defvar  *html-format* t)

(require 'w32-oblist)
(require 'html-format)

(defun make-xosus-oblist ()
  (save-excursion
    (set-buffer
     (or (find-buffer-visiting xosust-file)
	 (find-file-noselect xosust-file))
     )

    (goto-char (point-min))
		    
    (loop for x in '(
		     "a64l"
		     "abort"
		     "abs"
		     "access"
		     "acos"
		     "acosh"
		     "advance"
		     "alarm"
		     "asctime"
		     "asin"
		     "asinh"
		     "assert"
		     "atan"
		     "atan2"
		     "atanh"
		     "atexit"
		     "atof"
		     "atoi"
		     "atol"
		     "basename"
		     "bcmp"
		     "bcopy"
		     "brk"
		     "bsd"
		     "bsearch"
		     "bzero"
		     "calloc"
		     "catclose"
		     "catgets"
		     "catopen"
		     "cbrt"
		     "ceil"
		     "cfgetispeed"
		     "cfgetospeed"
		     "cfsetispeed"
		     "cfsetospeed"
		     "chdir"
		     "chmod"
		     "chown"
		     "chroot"
		     "clearerr"
		     "clock"
		     "close"
		     "closedir"
		     "closelog"
		     "compile"
		     "confstr"
		     "cos"
		     "cosh"
		     "creat"
		     "crypt"
		     "ctermid"
		     "ctime"
		     "cuserid"
		     "daylight"
		     "dbm"
		     "difftime"
		     "dirname"
		     "div"
		     "drand48"
		     "dup"
		     "ecvt"
		     "encrypt"
		     "endgrent"
		     "endpwent"
		     "endutxent"
		     "environ"
		     "erand48"
		     "erf"
		     "errno"
		     "environ"
		     "exit"
		     "exp"
		     "expm1"
		     "fabs"
		     "fattach"
		     "fchdir"
		     "fchmod"
		     "fchown"
		     "fclose"
		     "fcntl"
		     "fcvt"
		     "FD"
		     "fdetach"
		     "fdopen"
		     "feof"
		     "ferror"
		     "fflush"
		     "ffs"
		     "fgetc"
		     "fgetpos"
		     "fgets"
		     "fgetwc"
		     "fgetws"
		     "fileno"
		     "floor"
		     "fmod"
		     "fmtmsg"
		     "fnmatch"
		     "fopen"
		     "fork"
		     "fpathconf"
		     "fprintf"
		     "fputc"
		     "fputs"
		     "fputwc"
		     "fputws"
		     "fread"
		     "free"
		     "freopen"
		     "isalpha"
		     "fscanf"
		     "fseek"
		     "fsetpos"
		     "fstat"
		     "fstatvfs"
		     "fsync"
		     "ftell"
		     "ftime"
		     "ftok"
		     "ftruncate"
		     "ftw"
		     "fwrite"
		     "gamma"
		     "gcvt"
		     "getc"
		     "getchar"
		     "getcontext"
		     "getcwd"
		     "getdate"
		     "getdtablesize"
		     "getegid"
		     "getenv"
		     "geteuid"
		     "getgid"
		     "getgrent"
		     "getgrgid"
		     "getgrnam"
		     "getgroups"
		     "gethostid"
		     "getitimer"
		     "getlogin"
		     "getmsg"
		     "getopt"
		     "getpagesize"
		     "getpass"
		     "getpgid"
		     "getpgrp"
		     "getpid"
		     "getpmsg"
		     "getppid"
		     "getpriority"
		     "getpwent"
		     "getpwnam"
		     "getpwuid"
		     "getrlimit"
		     "getrusage"
		     "gets"
		     "getsid"
		     "getsubopt"
		     "gettimeofday"
		     "getuid"
		     "getutxent"
		     "getw"
		     "getwc"
		     "getwchar"
		     "getwd"
		     "glob"
		     "gmtime"
		     "grantpt"
		     "hcreate"
		     "hdestroy"
		     "hsearch"
		     "hypot"
		     "iconv"
		     "iconv_close"
		     "iconv_open"
		     "ilogb"
		     "index"
		     "initstate"
		     "insque"
		     "ioctl"
		     "isalnum"
		     "isalpha"
		     "isascii"
		     "isastream"
		     "isatty"
		     "iscntrl"
		     "isdigit"
		     "isgraph"
		     "islower"
		     "isnan"
		     "isprint"
		     "ispunct"
		     "isspace"
		     "isupper"
		     "iswalnum"
		     "iswalpha"
		     "iswcntrl"
		     "iswctype"
		     "iswdigit"
		     "iswgraph"
		     "iswlower"
		     "iswprint"
		     "iswpunct"
		     "iswspace"
		     "iswupper"
		     "iswxdigit"
		     "isxdigit"
		     "j0"
		     "jrand48"
		     "kill"
		     "killpg"
		     "l64a"
		     "labs"
		     "lchown"
		     "lcong48"
		     "ldexp"
		     "ldiv"
		     "lfind"
		     "lgamma"
		     "link"
		     "localeconv"
		     "localeconv"
		     "localtime"
		     "lockf"
		     "log"
		     "log"
		     "log10"
		     "log1p"
		     "logb"
		     "longjmp"
		     "longjmp"
		     "lrand48"
		     "lsearch"
		     "lseek"
		     "lstat"
		     "makecontext"
		     "malloc"
		     "mblen"
		     "mbstowcs"
		     "mbtowc"
		     "memccpy"
		     "memchr"
		     "memcmp"
		     "memcpy"
		     "memmove"
		     "memset"
		     "mkdir"
		     "mkfifo"
		     "mknod"
		     "mkstemp"
		     "mktemp"
		     "mktime"
		     "mmap"
		     "modf"
		     "mprotect"
		     "mrand48"
		     "msgctl"
		     "msgget"
		     "msgrcv"
		     "msgsnd"
		     "msync"
		     "munmap"
		     "nextafter"
		     "nftw"
		     "nice"
		     "langinfo"
		     "nrand48"
		     "open"
		     "opendir"
		     "openlog"
		     "fpathconf"
		     "fpathconf"
		     "pause"
		     "pclose"
		     "perror"
		     "pipe"
		     "poll"
		     "popen"
		     "pow"
		     "printf"
		     "ptsname"
		     "putc"
		     "putchar"
		     "putenv"
		     "putmsg"
		     "puts"
		     "pututxline"
		     "putw"
		     "putwc"
		     "putwchar"
		     "qsort"
		     "raise"
		     "rand"
		     "random"
		     "read"
		     "readdir"
		     "readlink"
		     "readv"
		     "realloc"
		     "realpath"
		     "re_comp"
		     "regcmp"
		     "regcomp"
		     "regex"
		     "expressions"
		     "remainder"
		     "remove"
		     "remque"
		     "rename"
		     "rewind"
		     "rewinddir"
		     "rindex"
		     "rint"
		     "rmdir"
		     "sbrk"
		     "scalb"
		     "scanf"
		     "seed48"
		     "seekdir"
		     "select"
		     "semctl"
		     "semget"
		     "semop"
		     "setbuf"
		     "setcontext"
		     "setgid"
		     "setgrent"
		     "setitimer"
		     "setjmp"
		     "setjmp"
		     "setkey"
		     "setlocale"
		     "setlogmask"
		     "setpgid"
		     "setpgrp"
		     "setpriority"
		     "setregid"
		     "setreuid"
		     "setrlimit"
		     "setsid"
		     "setstate"
		     "setuid"
		     "setutxent"
		     "setvbuf"
		     "shmat"
		     "shmctl"
		     "shmdt"
		     "shmget"
		     "sigaction"
		     "sigaddset"
		     "sigaltstack"
		     "sigdelset"
		     "sigemptyset"
		     "sigfillset"
		     "sighold"
		     "siginterrupt"
		     "sigismember"
		     "siglongjmp"
		     "void"
		     "sigpause"
		     "sigpause"
		     "sigpending"
		     "sigprocmask"
		     "sigrelse"
		     "sigsetjmp"
		     "sigstack"
		     "sigsuspend"
		     "sin"
		     "sinh"
		     "sleep"
		     "sprintf"
		     "sqrt"
		     "srand"
		     "srand48"
		     "srandom"
		     "sscanf"
		     "stat"
		     "statvfs"
		     "stderr"
		     "step"
		     "strcasecmp"
		     "strcat"
		     "strchr"
		     "strcmp"
		     "strcoll"
		     "strcpy"
		     "strcspn"
		     "strdup"
		     "strerror"
		     "strfmon"
		     "strftime"
		     "strlen"
		     "strncasecmp"
		     "strncat"
		     "strncmp"
		     "strncpy"
		     "strpbrk"
		     "strptime"
		     "strrchr"
		     "strspn"
		     "strstr"
		     "strtod"
		     "strtok"
		     "tan"
		     "tanh"
		     "tcdrain"
		     "tcflow"
		     "tcflush"
		     "tcgetattr"
		     "tcgetpgrp"
		     "tcgetsid"
		     "tcsendbreak"
		     "tcsetattr"
		     "tcsetpgrp"
		     "tdelete"
		     "telldir"
		     "tempnam"
		     "tfind"
		     "time"
		     "times"
		     "timezone"
		     "tmpfile"
		     "tmpnam"
		     "toascii"
		     "tolower"
		     "tolower"
		     "toupper"
		     "toupper"
		     "towlower"
		     "towupper"
		     "truncate"
		     "tdelete"
		     "ttyname"
		     "ttyslot"
		     "twalk"
		     "tzname"
		     "tzset"
		     "ualarm"
		     "ulimit"
		     "umask"
		     "uname"
		     "ungetc"
		     "ungetwc"
		     "unlink"
		     "unlockpt"
		     "usleep"
		     "utime"
		     "utimes"
		     "valloc"
		     "vfork"
		     "vfprintf"
		     "wait"
		     "wait3"
		     "waitid"
		     "waitpid"
		     "wcscat"
		     "wcschr"
		     "wcscmp"
		     "wcscoll"
		     "wcscpy"
		     "wcscspn"
		     "wcsftime"
		     "wcslen"
		     "wcsncat"
		     "wcsncmp"
		     "wcsncpy"
		     "wcspbrk"
		     "wcsrchr"
		     "wcsspn"
		     "wcstod"
		     "wcstok"
		     "wcstol"
		     "wcstombs"
		     "wcstoul"
		     "wcswcs"
		     "wcswidth"
		     "wcsxfrm"
		     "wctomb"
		     "wctype"
		     "wcwidth"
		     "wordexp"
		     "write"
		     "y0"
		     )

	  collect
	  (list x 
		 (re-search-forward (format "<a name=\"%s\"" x) nil t)
		)
	  )
    )
  )

; recompute oblist if necessary
(defvar *xosust-oblist* "~/emacs/lisp/xosus-oblist.el")

(if (< (compare-filetime
	(filemodtime *xosust-oblist*)
	(filemodtime xosust-file)) 0) 

    (let ((standard-output (zap-buffer " *xosust-oblist*")))
      (print
       (list 'defvar 'xosus-oblist (list 'quote (make-xosus-oblist)))
       )
      (save-excursion 
	(set-buffer standard-output)
	(write-region (point-min) (point-max) *xosust-oblist*)
	)
      )
  )

(load-library "xosus-oblist")

;; todo: xosust-mode with history. (ala cscope-mode)
;; other linkages and xrefs
;; also for data structures.

;; assumes xosust file is static!

(defun find-xosus-fn (fn &optional noerror)
  "find the page for the xosus function FN, with autocompletion and indication" 
  (interactive (list (complete-indicated-word
		      "Xosus Function (%s): "  xosus-oblist)))
  (let* ((p (assoc fn xosus-oblist))
	 (hbn (concat "*xosus " fn)))

    (if (buffer-exists-p hbn) (pop-to-buffer hbn)

      (if p 
	  (let* ((bn " *xosust*")
		 (b (buffer-exists-p bn))
		 )
	    (if (not b) (progn
			  (setq b (zap-buffer bn))
			  (insert-file-contents xosust-file)
			  (toggle-read-only)
			  (not-modified)
			  ))
	    (set-buffer b)
	    (widen)
	    (goto-char (cadr p))
	    (narrow-to-page)

	    (pop-to-buffer hbn)
	    (insert-buffer-substring b)
	    (if *html-format*
		(html-format-region (point-min) (point-max) hbn t)
	      )

	    (not-modified)
	    (toggle-read-only)
	    (view-mode)
	    (beginning-of-buffer)
	    t
	    )
	(and (not noerror)
	     (message (format "Xosus function %s not found" fn)))
	)
      )
    )
  )

; xosus oblist actually includes win32 fns
(defun find-any-fn (fn)
  (interactive 
   (list (complete-indicated-word "lookfor function (%s): " xosus-oblist)))

  (or (find-w32-fn fn t)
      (find-xosus-fn fn t)
      (if (interactive-p) 
	  (message (format "function %s not found in win32 or xosus" fn))))
  )

(global-set-key "?" 'find-any-fn)

(defun xapropos (s) (interactive "sString: ")
  (let* ((ss (completing-read "Complete: " 
			      (let ((case-fold-search t))
				(loop for x in xosus-oblist
				      when (string-match s (car x))
				      collect
				      x))))
	 )
    (myman ss)))